# this is osclt configuration file, control how the program runs.
# config option format is ini compatible, supporting string, integer,
# float, boolean and duration type.

# hostname will add to all metrics
hostname = ""
# set the default precision.
precision = "second"
# log file path.
log_file = "/var/log/osclt/osclt.log"
# set the debug level. supported values are:
# info, debug, warning, error, fatal
log_level = "debug"
# use memory for caching.
cache_memory = true
# cache file path. if cache_memory is true, and this option is set,
# osclt will dump cache data to this file when exiting, and load data
# to memory when it starts again, guarantee no data will lost. if
# cache_memory is false, then use this file for caching overall.
cache_file = "/var/lib/osclt/cache.db"
# these tags will add to all metrics.
tags = {
    PATH: "/usr/lib"
}

# the socket listener collector options.
collect.socket = {
    unix_socket: "/var/run/osclt/listen.sock"
    mode: 0755
}

# Exec plugin default options. exec plugin support the following options:
#
# name:     string type. override the metric name.
# command:  string type. the command to run.
# interval: duration type. how long does the command run once.
# timeout:  duration type. kill the command if it is still running when exceed this time.
# depends:  string type. depends on other metrics, these metrics will pass
#           to the command by it's stdin.
# provider: boolean type. is set true, represent it is a data provider, it's
#           output data will not pass to process module, just caching it.
#
# Besides, any uppercase key will be treated as environment variable, 
collect.exec = {
    interval: 30s,
    timeout: 30s
    environment: {
        PATH: "/drsdf/aoefj"
    }
}

collect.exec.cpu_usage = {
    command: "cpu_usage -d 300 -i 30",
    interval: "60s",
    cache: {
        cpu_basic: 5
    },
    cache_count: 5,
    cache_time: 5m
}

collect.exec.dimm_basic = {
    cmd = "dimm_basic",
    interval = 60s
}

cache = {
    max_count: 40,
    max_time: 2d
}

cache.cpu_basic = {
    max_count: 50,
    max_time: 3600s
}

output.influxdb = {
    server = "10.2.3.145"
}
